/*
const fakeRequest = (url) => {
    return new Promise((resolve, reject) =>{
        const rand = Math.random()
        setTimeout(() => {
            if (rand > 0.7){
                resolve('Your fake data here')
            }
            reject('Request Error !!!')
        }, 1000)
    })
}
// ถ้าทำ result จะไม่ทำ reject จะทำอันใดอันหนึ่ง
fakeRequest('/dogs/1')
    .then((data) => {
    console.log('Done')
    console.log('Data is: ',data)
})
    .catch((err) => {
        console.log("Error: ",err)
    })
*/

const delayedColorChange = (color, delay) => {
    return new Promise ( (resolve,reject) =>{
        setTimeout(() =>{
            document.body.style.backgroundColor = color;
            resolve()
        }, delay)
    })
}

delayedColorChange('red', 1000)
    .then(() => {return delayedColorChange('orange', 1000)})
    .then(() => {return delayedColorChange('yellow', 1000)})
    .then(() => {return delayedColorChange('green', 1000)})
    .then(() => {return delayedColorChange('blue', 1000)})    
    .then(() => {return delayedColorChange('indigo', 1000)})
    .then(() => {return delayedColorChange('violet', 1000)})

/* One line
delayedColorChange('red', 1000)
    .then(() => delayedColorChange('orange', 1000))
    .then(() => delayedColorChange('yellow', 1000))
    .then(() => delayedColorChange('green', 1000))
    .then(() => delayedColorChange('blue', 1000))
    .then(() => delayedColorChange('indigo', 1000))
    .then(() => delayedColorChange('violet', 1000))
*/
